{"mappings":"AAAA,MAAMA,EAAmBC,SAASC,iBAAiB,uBAC7CC,EAAYF,SAASG,cAAc,iBACnCC,EAAkBJ,SAASG,cAAc,mBACzCE,EAAeL,SAASG,cAAc,sBAC5C,IAAIG,EAAQ,EAQZ,SAASC,EAAaC,GAClBA,EAAGC,iBACH,IAAIC,EAAOF,EAAGG,cACVC,EAASF,EAAKG,QAAQ,uBAEtBC,GADKF,EAAOG,QAAQC,GACZJ,EAAOT,cAAc,uBAAuBc,aACpDC,EAAcC,SAASC,EAAmBR,EAAOT,cAAc,uBAAuBc,cAwDnFX,GAtDOY,EACdG,QAAQC,IAAIhB,GACZiB,IACAnB,EAAgBoB,mBAAmB,YAavC,UAAqBR,GAACA,EAAEF,MAAEA,EAAKI,YAAEA,IAC7B,MAAO,kCAAkCF,yCACVF,mQA+BdW,EAzByCP,EA0BnDQ,OAAOD,GAAKE,QAAO,gCAAkC,gHADhE,IAAqBF,C,CA9C+BG,CAAWd,IAC3De,IAEAnB,EAAKoB,UAAW,C,CAuCpB,SAASV,EAAmBK,GACxB,OAAOA,EAAIE,QAAO,MAAQ,G,CAa9B,SAASJ,IACLrB,EAAUe,YAAc,2B,CAG5B,SAASY,IACN,IAAIE,EAAS3B,EAAgB4B,SAASD,OACtC1B,EAAaY,YAAcc,C,CA/E9BhC,EAAiBkC,SAAQC,IACpBA,EAAUrB,QAAQ,uBAAuBsB,aAAa,UAuDhDC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAAMH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,KAtD5FL,EAAUM,iBAAiB,QAASjC,EAAa,IAqBtDH,EAAgBoC,iBAAiB,SAAUC,IACtCA,EAAEC,OAAOC,UAAUC,SAAS,oBAoBjC,SAAuBC,GACdA,EAAc1C,cAAc,cAAcY,QAAQC,GAC3DhB,SAASG,cAAc,+BAA+BA,cAAc,mBAAmB2B,UAAW,EAwBlG,SAAwBgB,GACbxC,GAASwC,C,CAtBpBC,CADmB5B,SAASC,EAAmBR,OAAOT,cAAc,uBAAuBc,eAE3FM,IACAsB,EAAcG,SACdnB,G,CA3BIoB,CAAcR,EAAEC,OAAO7B,QAAQ,cAAc","sources":["src/js/cart.js"],"sourcesContent":["const addProductToCart = document.querySelectorAll('.add-product-button');\nconst fullPrice = document.querySelector('.total-dinero');\nconst cardProductList = document.querySelector('.products-cards');\nconst showQuantity = document.querySelector('.quantity-products');\nlet price = 0;\n\naddProductToCart.forEach(addButton => {\n     addButton.closest('.products-list-item').setAttribute(\"data-id\", randomId());\n     addButton.addEventListener('click', onAddProduct);\n});\n    \n\nfunction onAddProduct(el) {\n    el.preventDefault();\n    let self = el.currentTarget;\n    let parent = self.closest('.products-list-item');\n    let id = parent.dataset.id;\n    let title = parent.querySelector('.products-list-name').textContent;\n    let priceNumber = parseInt(priceWithoutSpaces(parent.querySelector('.add-product-button').textContent));\n\n    plusFullPrice(priceNumber)\n    console.log(price);\n    printFullPrice();\n    cardProductList.insertAdjacentHTML('beforeend', markupCard(title, priceNumber, id));\n    printQuantity();\n   \n    self.disabled = true;\n};\n\ncardProductList.addEventListener('click', (e) => {\n  if(e.target.classList.contains('.delete-product')) {\n    deleteProduct(e.target.closest('.prod-card'));\n  }\n});\n\n\nfunction markupCard ({id, title, priceNumber}) {\n    return `<li class=\"prod-card\" data-id=\"${id}\">\n    <h4 class=\"prod-card-title\">\"${title}\"</h4>\n    <div id=\"counter\">\n      <button type=\"button\" data-action=\"decrement\">-1</button>\n      <span id=\"value\">0</span>\n      <button type=\"button\" data-action=\"increment\">+1</button>\n    </div>\n    <h5>Price: <span class=\"card-content-price\">${normalPrice(priceNumber)}</span> UAH</h5>\n    <button type=\"button\" class=\"delete-product\" value=\"1\">Delete</button>\n\n  </li>`;\n};\n\nfunction deleteProduct(productParent) {\nlet id = productParent.querySelector('.prod-card').dataset.id;\ndocument.querySelector('.prod-cart[data-id=\"${id}\"]').querySelector('.delete-product').disabled = false;\n\nlet currentPrice = parseInt(priceWithoutSpaces(parent.querySelector('.card-content-price').textContent));\nminusFullPrice(currentPrice);\nprintFullPrice();\nproductParent.remove();\nprintQuantity();\n};\n\nfunction randomId() {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n};\n\nfunction priceWithoutSpaces(str) {\n    return str.replace(/\\s/g, '');\n};\n\nfunction normalPrice(str) {\n    return String(str).replace(/(\\d)(?=(\\d\\d\\d) + ([^\\d]|$))/g, '$1 ');\n};\n\nfunction plusFullPrice(currentPrice) {\n    return price += currentPrice;\n};\nfunction minusFullPrice(currentPrice) {\n    return price -= currentPrice;\n};\nfunction printFullPrice() {\n    fullPrice.textContent = '${normalPrice(price)} UAH';\n};\n\nfunction printQuantity() {\n   let length = cardProductList.children.length;\n   showQuantity.textContent = length;\n//    length > 0 ? cart.classList.add('active') : cart.classList.remove('active');\n};"],"names":["$915de8ffc4dd3149$var$addProductToCart","document","querySelectorAll","$915de8ffc4dd3149$var$fullPrice","querySelector","$915de8ffc4dd3149$var$cardProductList","$915de8ffc4dd3149$var$showQuantity","$915de8ffc4dd3149$var$price","$915de8ffc4dd3149$var$onAddProduct","el","preventDefault","self","currentTarget","parent","closest","title","dataset","id","textContent","priceNumber","parseInt","$915de8ffc4dd3149$var$priceWithoutSpaces","console","log","$915de8ffc4dd3149$var$printFullPrice","insertAdjacentHTML","str","String","replace","$915de8ffc4dd3149$var$markupCard","$915de8ffc4dd3149$var$printQuantity","disabled","length","children","forEach","addButton","setAttribute","Math","random","toString","substring","addEventListener","e","target","classList","contains","productParent","currentPrice","$915de8ffc4dd3149$var$minusFullPrice","remove","$915de8ffc4dd3149$var$deleteProduct"],"version":3,"file":"index.7d513d9f.js.map"}